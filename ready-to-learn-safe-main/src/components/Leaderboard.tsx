import { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  Trophy,\n  Medal,\n  Crown,\n  Star,\n  TrendingUp,\n  Users,\n  Award,\n  Zap,\n  Target,\n  Clock,\n  BarChart3\n} from \"lucide-react\";\n\ninterface LeaderboardEntry {\n  position: number;\n  student: {\n    id: string;\n    name: string;\n    email: string;\n    class: string;\n    division: string;\n  };\n  institution: string;\n  stats: {\n    rankingScore: number;\n    averageScore: number;\n    totalQuizzes: number;\n    totalBadges: number;\n    badgePoints: number;\n    currentStreak: number;\n    perfectScores: number;\n  };\n  lastActive: string;\n  isCurrentUser?: boolean;\n}\n\ninterface LeaderboardData {\n  leaderboard: LeaderboardEntry[];\n  studentPosition?: LeaderboardEntry | null;\n}\n\ninterface StudentRankingDetails {\n  student: {\n    name: string;\n    email: string;\n    class: string;\n    division: string;\n  };\n  institution: string;\n  overallStats: {\n    totalQuizzes: number;\n    averageScore: number;\n    highestScore: number;\n    perfectScores: number;\n    totalTimeSpent: number;\n    fastestQuizTime: number;\n  };\n  badgeStats: {\n    totalBadges: number;\n    badgePoints: number;\n    bronzeBadges: number;\n    silverBadges: number;\n    goldBadges: number;\n    platinumBadges: number;\n  };\n  streakStats: {\n    currentStreak: number;\n    longestStreak: number;\n    totalPassedQuizzes: number;\n  };\n  rankings: {\n    global: { position: number; percentile: number };\n    institutional: { position: number; percentile: number };\n  };\n  rankingScore: number;\n}\n\nconst Leaderboard = () => {\n  const [activeTab, setActiveTab] = useState('global');\n  const [leaderboardData, setLeaderboardData] = useState<LeaderboardData | null>(null);\n  const [studentRanking, setStudentRanking] = useState<StudentRankingDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch leaderboard data\n  const fetchLeaderboard = async (type: 'global' | 'institutional') => {\n    try {\n      const response = await fetch(`/api/leaderboard/${type}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch leaderboard');\n      }\n\n      const data = await response.json();\n      setLeaderboardData(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load leaderboard');\n    }\n  };\n\n  // Fetch student ranking details\n  const fetchStudentRanking = async () => {\n    try {\n      const response = await fetch('/api/student/ranking', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch student ranking');\n      }\n\n      const data = await response.json();\n      setStudentRanking(data);\n    } catch (err) {\n      console.error('Error fetching student ranking:', err);\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([\n        fetchLeaderboard(activeTab as 'global' | 'institutional'),\n        fetchStudentRanking()\n      ]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [activeTab]);\n\n  const getRankIcon = (position: number) => {\n    switch (position) {\n      case 1:\n        return <Crown className=\"h-6 w-6 text-yellow-500\" />;\n      case 2:\n        return <Medal className=\"h-6 w-6 text-gray-400\" />;\n      case 3:\n        return <Award className=\"h-6 w-6 text-amber-600\" />;\n      default:\n        return <div className=\"w-6 h-6 flex items-center justify-center text-sm font-bold text-gray-600\">#{position}</div>;\n    }\n  };\n\n  const getPositionColor = (position: number) => {\n    if (position === 1) return 'bg-gradient-to-r from-yellow-50 to-yellow-100 border-yellow-200';\n    if (position === 2) return 'bg-gradient-to-r from-gray-50 to-gray-100 border-gray-200';\n    if (position === 3) return 'bg-gradient-to-r from-amber-50 to-amber-100 border-amber-200';\n    return 'bg-white border-gray-100';\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center gap-4 mb-6\">\n          <Trophy className=\"h-8 w-8 text-blue-600\" />\n          <h1 className=\"text-3xl font-bold\">Leaderboard</h1>\n        </div>\n        \n        <Tabs defaultValue=\"global\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"global\">Global Ranking</TabsTrigger>\n            <TabsTrigger value=\"institutional\">My Institution</TabsTrigger>\n          </TabsList>\n          \n          <div className=\"space-y-4 mt-4\">\n            {[...Array(10)].map((_, i) => (\n              <Card key={i}>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center space-x-4\">\n                    <Skeleton className=\"w-12 h-12 rounded-full\" />\n                    <div className=\"flex-1\">\n                      <Skeleton className=\"h-4 w-32 mb-2\" />\n                      <Skeleton className=\"h-3 w-24\" />\n                    </div>\n                    <Skeleton className=\"h-6 w-16\" />\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </Tabs>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert className=\"max-w-md mx-auto mt-8\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Trophy className=\"h-8 w-8 text-blue-600\" />\n          <div>\n            <h1 className=\"text-3xl font-bold\">Leaderboard</h1>\n            <p className=\"text-gray-600\">See how you rank against other students</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Student's Current Ranking Card */}\n      {studentRanking && (\n        <Card className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Star className=\"h-5 w-5 text-blue-600\" />\n              Your Ranking\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">{studentRanking.rankingScore}</div>\n                <div className=\"text-sm text-gray-600\">Ranking Score</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{studentRanking.overallStats.averageScore}%</div>\n                <div className=\"text-sm text-gray-600\">Avg Score</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">{studentRanking.badgeStats.totalBadges}</div>\n                <div className=\"text-sm text-gray-600\">Badges</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600\">{studentRanking.streakStats.currentStreak}</div>\n                <div className=\"text-sm text-gray-600\">Current Streak</div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-center gap-8 mt-4 pt-4 border-t\">\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold\">#{studentRanking.rankings.global.position}</div>\n                <div className=\"text-sm text-gray-600\">Global Rank</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold\">#{studentRanking.rankings.institutional.position}</div>\n                <div className=\"text-sm text-gray-600\">Institution Rank</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Leaderboard Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"global\" className=\"flex items-center gap-2\">\n            <Users className=\"h-4 w-4\" />\n            Global Ranking\n          </TabsTrigger>\n          <TabsTrigger value=\"institutional\" className=\"flex items-center gap-2\">\n            <Target className=\"h-4 w-4\" />\n            My Institution\n          </TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value={activeTab} className=\"space-y-4 mt-6\">\n          {/* Top 3 Podium */}\n          {leaderboardData && leaderboardData.leaderboard.length >= 3 && (\n            <div className=\"grid grid-cols-3 gap-4 mb-8\">\n              {/* Second Place */}\n              <Card className=\"bg-gradient-to-br from-gray-50 to-gray-100 border-gray-200\">\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"flex justify-center mb-2\">\n                    <Medal className=\"h-8 w-8 text-gray-400\" />\n                  </div>\n                  <Avatar className=\"w-16 h-16 mx-auto mb-2\">\n                    <AvatarFallback className=\"text-lg font-bold\">\n                      {leaderboardData.leaderboard[1].student.name.split(' ').map(n => n[0]).join('')}\n                    </AvatarFallback>\n                  </Avatar>\n                  <h3 className=\"font-semibold\">{leaderboardData.leaderboard[1].student.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{leaderboardData.leaderboard[1].student.class}</p>\n                  <div className=\"mt-2\">\n                    <Badge variant=\"secondary\">{leaderboardData.leaderboard[1].stats.rankingScore} pts</Badge>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* First Place */}\n              <Card className=\"bg-gradient-to-br from-yellow-50 to-yellow-100 border-yellow-200 relative\">\n                <div className=\"absolute -top-2 left-1/2 transform -translate-x-1/2\">\n                  <Crown className=\"h-6 w-6 text-yellow-500\" />\n                </div>\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"flex justify-center mb-2 mt-2\">\n                    <Trophy className=\"h-8 w-8 text-yellow-500\" />\n                  </div>\n                  <Avatar className=\"w-20 h-20 mx-auto mb-2\">\n                    <AvatarFallback className=\"text-xl font-bold\">\n                      {leaderboardData.leaderboard[0].student.name.split(' ').map(n => n[0]).join('')}\n                    </AvatarFallback>\n                  </Avatar>\n                  <h3 className=\"font-bold text-lg\">{leaderboardData.leaderboard[0].student.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{leaderboardData.leaderboard[0].student.class}</p>\n                  <div className=\"mt-2\">\n                    <Badge className=\"bg-yellow-500\">{leaderboardData.leaderboard[0].stats.rankingScore} pts</Badge>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Third Place */}\n              <Card className=\"bg-gradient-to-br from-amber-50 to-amber-100 border-amber-200\">\n                <CardContent className=\"p-4 text-center\">\n                  <div className=\"flex justify-center mb-2\">\n                    <Award className=\"h-8 w-8 text-amber-600\" />\n                  </div>\n                  <Avatar className=\"w-16 h-16 mx-auto mb-2\">\n                    <AvatarFallback className=\"text-lg font-bold\">\n                      {leaderboardData.leaderboard[2].student.name.split(' ').map(n => n[0]).join('')}\n                    </AvatarFallback>\n                  </Avatar>\n                  <h3 className=\"font-semibold\">{leaderboardData.leaderboard[2].student.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{leaderboardData.leaderboard[2].student.class}</p>\n                  <div className=\"mt-2\">\n                    <Badge variant=\"outline\" className=\"border-amber-300\">{leaderboardData.leaderboard[2].stats.rankingScore} pts</Badge>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Full Leaderboard */}\n          <div className=\"space-y-2\">\n            {leaderboardData?.leaderboard.map((entry, index) => (\n              <Card \n                key={entry.student.id} \n                className={`transition-all hover:shadow-md ${\n                  entry.isCurrentUser ? 'ring-2 ring-blue-500 bg-blue-50' : getPositionColor(entry.position)\n                }`}\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex items-center justify-center w-12 h-12\">\n                        {getRankIcon(entry.position)}\n                      </div>\n                      \n                      <Avatar>\n                        <AvatarFallback>\n                          {entry.student.name.split(' ').map(n => n[0]).join('')}\n                        </AvatarFallback>\n                      </Avatar>\n                      \n                      <div>\n                        <h3 className={`font-semibold ${entry.isCurrentUser ? 'text-blue-700' : ''}`}>\n                          {entry.student.name}\n                          {entry.isCurrentUser && <Badge className=\"ml-2 text-xs bg-blue-500\">You</Badge>}\n                        </h3>\n                        <p className=\"text-sm text-gray-600\">\n                          {entry.student.class} - {entry.student.division}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-6 text-sm\">\n                      <div className=\"text-center\">\n                        <div className=\"font-bold text-lg\">{entry.stats.rankingScore}</div>\n                        <div className=\"text-gray-600\">Points</div>\n                      </div>\n                      \n                      <div className=\"text-center\">\n                        <div className=\"font-semibold\">{entry.stats.averageScore}%</div>\n                        <div className=\"text-gray-600\">Avg Score</div>\n                      </div>\n                      \n                      <div className=\"text-center\">\n                        <div className=\"font-semibold flex items-center gap-1\">\n                          <Trophy className=\"h-4 w-4 text-yellow-500\" />\n                          {entry.stats.totalBadges}\n                        </div>\n                        <div className=\"text-gray-600\">Badges</div>\n                      </div>\n                      \n                      <div className=\"text-center\">\n                        <div className=\"font-semibold flex items-center gap-1\">\n                          <Zap className=\"h-4 w-4 text-orange-500\" />\n                          {entry.stats.currentStreak}\n                        </div>\n                        <div className=\"text-gray-600\">Streak</div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Student Position (if not in top 50) */}\n          {leaderboardData?.studentPosition && (\n            <Card className=\"border-2 border-blue-200 bg-blue-50\">\n              <CardContent className=\"p-4\">\n                <h4 className=\"font-semibold mb-2 text-blue-700\">Your Position</h4>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center justify-center w-12 h-12 bg-blue-100 rounded-full\">\n                      <span className=\"font-bold text-blue-700\">#{leaderboardData.studentPosition.position}</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-blue-700\">{leaderboardData.studentPosition.student.name}</h3>\n                      <p className=\"text-sm text-blue-600\">{leaderboardData.studentPosition.student.class} - {leaderboardData.studentPosition.student.division}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4 text-sm\">\n                    <div className=\"text-center\">\n                      <div className=\"font-bold\">{leaderboardData.studentPosition.stats.rankingScore}</div>\n                      <div className=\"text-blue-600\">Points</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"font-bold\">{leaderboardData.studentPosition.stats.averageScore}%</div>\n                      <div className=\"text-blue-600\">Avg Score</div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Leaderboard;
